version: "3.9"

services:
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.9.1
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped

  ollama:
    image: ollama/ollama:0.3.14
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    restart: unless-stopped

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "8010:8000"
    depends_on:
      - qdrant
      - redis
      - ollama
    volumes:
      - ./backend/data:/app/data
    command: ["uvicorn", "server.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - redis
      - qdrant
    volumes:
      - ./backend/data:/app/data
    command: ["python", "-m", "server.tasks.worker"]
    restart: unless-stopped

  frontend:
    image: node:20.16-alpine
    working_dir: /app
    environment:
      - NODE_ENV=development
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    command: ["sh", "-c", "npm ci && npm run dev -- --host 0.0.0.0"]
    depends_on:
      - api
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.55.1
    volumes:
      - ./compose/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.2.0
    ports:
      - "3000:3000"
    volumes:
      - ./compose/grafana/provisioning:/etc/grafana/provisioning
      - ./compose/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped

  loki:
    image: grafana/loki:3.1.1
    command: ["-config.file=/etc/loki/local-config.yaml"]
    volumes:
      - ./compose/loki/config.yml:/etc/loki/local-config.yaml:ro
    ports:
      - "3100:3100"
    restart: unless-stopped

volumes:
  qdrant_data:
  ollama_models:
  redis_data:
